version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotel_laravel
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - hotel_network
    depends_on:
      - mysql
      - redis

  # Crow API Gateway
  crow:
    build:
      context: ./Crow
      dockerfile: Dockerfile.crow
    container_name: hotel_crow
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: hotel_db
      DB_USERNAME: hotel_user
      DB_PASSWORD: hotel_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      APP_URL: http://app:9000
      CROW_PORT: 18080
      CROW_HOST: 0.0.0.0
      LARAVEL_API_URL: http://app:9000
      CROW_SSL_CERT: /etc/nginx/ssl/server.crt
      CROW_SSL_KEY: /etc/nginx/ssl/server.key
    volumes:
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    networks:
      - hotel_network
    depends_on:
      - app

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: hotel_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    networks:
      - hotel_network
    depends_on:
      - app
      - crow

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: hotel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: hotel_db
      MYSQL_ROOT_PASSWORD: hotel_password
      MYSQL_PASSWORD: hotel_password
      MYSQL_USER: hotel_user
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hotel_network

  # Redis for Caching
  redis:
    image: redis:alpine
    container_name: hotel_redis
    restart: unless-stopped
    networks:
      - hotel_network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotel_queue
    restart: unless-stopped
    command: php artisan queue:work
    volumes:
      - ./:/var/www/html
    networks:
      - hotel_network
    depends_on:
      - app
      - mysql
      - redis

networks:
  hotel_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 